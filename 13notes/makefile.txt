makefile:
Makefiles are used to help decide which parts of a large program need to be recompiled. In the vast majority of cases, C or C++ files are compiled. Other languages typically have their own tools that serve a similar purpose as Make. Make can also be used beyond compilation too, when you need a series of instructions to run depending on what files have changed.

why variables ? 

-first we declare variables to helps make the makefile more maintainable and flexible. 

- it makes makefile easy to update . for example if you need to add another source file just add it to source variable , and the rest of the makefile will handle it .

Reference variables using either ${} or $()

OBJS = ${SRC:.c=.o} ??
transform the .c files to .o files / automatically generation ovject files names from the source files .


%.o : %.c ? generic rules 
This is how you automatically generate a list of object files from source files in a Makefile.

automatic variables 
$@ : target name 

$^ : target all prerequisties

An object file doesnâ€™t : that's why u cant run a object file .

    Have a file header that tells the O/S it is executable. The linker will add this header when building an executable.






	
 
